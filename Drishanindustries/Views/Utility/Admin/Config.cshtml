@using DevExtreme.AspNet.Mvc
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model ProductCataLog.Lib.ViewModels.ConfigDetailsViewModel
@{
    ViewData["Title"] = string.Format(Drishanindustries.Common.Common.PageName, Drishanindustries.Common.Common.AppName, "Config");
}

<div class="container-fluid" id="container-wrapper">

    <div class="row">
        <div class="col-lg-12">
            <!-- Form Basic -->
            <div class="card mb-6">
                <div class="card-body">
                    <form class="needs-validation" method="post" id="frmConfigDetail" novalidate>
                        <div class="form-group row">
                            <label for="inputEmail3" class="col-sm-1 col-form-label"><span class="red">*</span>Config Type:</label>
                            <div class="col-sm-3">                               
                                @(Html.DevExtreme().SelectBox().ID("ddlConfigType")
                                    .DataSource(d => d.Mvc().Controller("Utility").LoadAction("GetConfigMasterList").Key("intGICode"))
                                    .DisplayExpr("varName")
                                    .ValueExpr("intGICode")
                                    .Placeholder("-- Select --")
                                    .SearchEnabled(true)
                                    .OnOpened("dxSelectBox_OnOpened ")
                                    )
                            </div>
                            <label for="inputEmail3" class="col-sm-1 col-form-label"><span class="red">*</span>Config Name:</label>
                            <div class="col-sm-6">
                                <input type="text" class="form-control" id="txtConfigName" asp-for="config_Detail.varName" placeholder="Config Name" tabindex="2">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="inputEmail3" class="col-sm-1 col-form-label">Values</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="txtValue1" asp-for="config_Detail.varValue1" placeholder="Value 1" tabindex="3">
                            </div>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="txtValue2" asp-for="config_Detail.varValue2" placeholder="Value 2" tabindex="4">
                            </div>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="txtValue3" asp-for="config_Detail.varValue3" placeholder="Value 3" tabindex="5">
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="inputEmail3" class="col-sm-1 col-form-label">Status:</label>
                            <div class="col-sm-3">
                                <input type="checkbox" id="chkStatus" asp-for="config_Detail.chrActive" tabindex="6" />
                            </div>
                        </div>
                        
                        <button type="button" id="btnSave" tabindex="7" class="btn btn-primary" onclick="return ValidateData()">Save</button>
                        <button type="button" id="btnCancel" tabindex="8" class="btn btn-secondary" onclick="return resetValidation()">Cancel</button>

                        <input type="hidden" asp-for="@Model.config_Detail.intGICode" id="intGICode" />
                        <input type="hidden" asp-for="@Model.config_Detail.chrActive" id="chrActive" />
                        <input type="hidden" asp-for="@Model.config_Detail.ref_ConfigurationID" id="ref_ConfigurationID" />

                    </form>
                </div>

            </div>
        </div>

    </div>
</div>
<br />
<!---Container Fluid-->
<!-- Container Fluid-->
<div class="container-fluid" id="container-wrapper">
    <div class="row">
        <!-- DataTable with Hover -->
        <div class="col-lg-12">
            <div class="card mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Config List</h6>
                    <button type="button" class="btn btn-primary" onclick="ExportExcel();">Download</button>
                </div>
                <div class="table-responsive p-3">
                    @(Html.DevExtreme().DataGrid()
                        .ID("grdConfigDetials")
                        .ShowBorders(true)
                        .DataSource(ds => ds.Mvc().Controller("Utility").Key("intGICode").LoadAction("GetConfigDetailsList"))
                        .Selection(s => s.Mode(SelectionMode.Single))
                        .LoadPanel(f => f.Enabled(false))
                        .Columns(columns =>
                        {
                            columns.Add().DataField("intGICode").Caption("Edit").Type(GridCommandColumnType.Buttons)
                            .Width(50)
                            .Buttons(b =>
                            {
                                b.Add().Name(GridColumnButtonName.Edit).Visible(true).Icon("edit").OnClick("editdata");

                            });
                            columns.Add().DataField("ConfigType").Caption("Config Type");
                            columns.Add().DataField("ConfigName").Caption("Config Name");
                            columns.Add().DataField("varValue1").Caption("Value 1");
                            columns.Add().DataField("varValue2").Caption("Value 2");
                            columns.Add().DataField("varValue3").Caption("Value 3");
                            columns.Add().DataField("chrActive").Caption("Status");
                            columns.Add().DataField("dtEntryDate").Caption("Entry Date").Format("yyyy-mm-dd");

                        })
                        .ColumnAutoWidth(true)
                        .Scrolling(scrolling => scrolling.ColumnRenderingMode(GridColumnRenderingMode.Standard))
                        .ShowRowLines(true)
                        .RowAlternationEnabled(true)
                        .Paging(paging => paging.PageSize(10))
                        .Pager(pager =>
                        {
                            pager.ShowInfo(true);
                        })
                        .Sorting(sorting => sorting.Mode(DevExtreme.AspNet.Mvc.GridSortingMode.Multiple))
                        .FilterRow(filterRow => filterRow
                        .Visible(true)
                        .ApplyFilter(GridApplyFilterMode.Auto)
                        )
                        .HeaderFilter(headerFilter => headerFilter.Visible(true))
                        .WordWrapEnabled(true)

                        )
                </div>
            </div>
        </div>
    </div>

</div>

@Html.AntiForgeryToken()
@section Scripts {
    <script src="~/Scripts/Utility/Configuration.js"></script>
    <script src="~/Scripts/Account/config.js"></script>
    <script src="~/Scripts/Account/Common.js"></script>
}